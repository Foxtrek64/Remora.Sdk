<Project>
    <UsingTask
            TaskName="ApplyTemplate"
            TaskFactory="RoslynCodeTaskFactory"
            AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
            <InputFile ParameterType="System.String" Required="true" />
            <OutputFile ParameterType="System.String" Required="true" />
            <Tokens ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
            <Debug ParameterType="System.Boolean" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System"/>
            <Using Namespace="System.IO"/>
            <Using Namespace="System.Text.RegularExpressions" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                    var content = File.ReadAllText(InputFile);

                    foreach (var token in Tokens) {
                        var key = token.ItemSpec;
                        var value = token.GetMetadata("Value");

                        content = Regex.Replace(content, key, value);

                        if (Debug) {
                            Log.LogMessage(MessageImportance.High, key + " => " + value);
                        }
                    }

                    var directoryPath = Path.GetDirectoryName(OutputFile);
                    Directory.CreateDirectory(directoryPath);
                    if (File.Exists(OutputFile)) {
                        var existingContent = File.ReadAllText(OutputFile);
                        if (existingContent == content) {
                            if (Debug) {
                                Log.LogMessage(MessageImportance.High, "File was not written, as the content would not have changed!");
                            }
                            return Success;
                        }
                    }

                    File.WriteAllText(OutputFile, content);

                    if (Debug) {
                        Log.LogMessage(MessageImportance.High, "File was written");
                    }
                ]]>
            </Code>
        </Task>
    </UsingTask>
</Project>
